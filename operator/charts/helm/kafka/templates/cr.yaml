{{- if and .Values.kafka.install (not .Values.global.externalKafka.enabled) }}
{{- if and .Values.deployDescriptor .Values.dockerKafka (ne (.Values.DEPLOY_W_HELM | toString) "true") }}
  {{- fail "Kafka requires `DEPLOY_W_HELM` parameter to be set to `true` for App Deployer" }}
{{- end }}
{{- if and (not .Values.kafka.zookeeperConnect) (not .Values.kafka.kraft.enabled) }}
{{ fail "\nError: You must set kafka.zookeeperConnect to install Kafka with ZooKeeper .\nFind more information in corresponding release documentation." }}
{{- end }}
{{- if and (not .Values.kafka.zookeeperConnect) .Values.kafka.kraft.enabled .Values.kafka.kraft.migration }}
{{ fail "\nError: You must set kafka.zookeeperConnect to migrate from Kafka with ZooKeeper to Kraft .\nFind more information in corresponding release documentation." }}
{{- end }}
{{- $pvc := lookup "v1" "PersistentVolumeClaim" .Release.Namespace (printf "pvc-%s-1" (include "kafka.name" .)) }}
{{- if $pvc }}
{{- if and (hasKey $pvc.metadata.labels "kraft") (not .Values.kafka.kraft.enabled) }}
{{ fail "\nError: You cannot upgrade Kraft to Kafka with ZooKeeper.\nFind more information in corresponding release documentation." }}
{{- end }}
{{- end }}
{{- include "validateKafkaUpgrade" . -}}
apiVersion: {{ .Values.operator.apiGroup }}/v1
kind: Kafka
metadata:
  name: {{ template "kafka.name" . }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/processed-by-operator: {{ template "kafka.name" . }}-operator
    {{- include "kafka.defaultLabels" . | nindent 4 }}
  annotations:
    netcracker.com/reconcile-trigger: "{{ randAlphaNum 10 }}"
spec:
  waitForPodsReady: {{ .Values.global.waitForPodsReady }}
  podReadinessTimeout: {{ .Values.global.podReadinessTimeout | default 600 }}
{{- if .Values.kafka.affinity }}
  affinity:
    {{ .Values.kafka.affinity | toJson }}
{{- end }}
{{- if .Values.kafka.tolerations }}
  tolerations:
    {{ .Values.kafka.tolerations | toJson }}
{{- end }}
{{- if .Values.kafka.priorityClassName }}
  priorityClassName: {{ .Values.kafka.priorityClassName }}
{{- end }}
  disableSecurity: {{ coalesce .Values.global.secrets.kafka.disableSecurity .Values.kafka.disableSecurity | default false }}
  dockerImage: {{ template "kafka.image" . }}
  heapSize: {{ .Values.kafka.heapSize }}
  replicas: {{ include "kafka.replicas" . }}
{{- if .Values.kafka.scaling }}
  scaling:
    reassignPartitions: {{ .Values.kafka.scaling.reassignPartitions }}
    allBrokersStartTimeoutSeconds: {{ default 600 .Values.kafka.scaling.allBrokersStartTimeoutSeconds }}
    topicReassignmentTimeoutSeconds: {{ default 300 .Values.kafka.scaling.topicReassignmentTimeoutSeconds }}
    brokerDeploymentScaleInEnabled: {{ .Values.kafka.scaling.brokerDeploymentScaleInEnabled  }}
{{- end }}
  resources:
    requests:
      cpu: {{ default "50m" .Values.kafka.resources.requests.cpu }}
      memory: {{ default "600Mi" .Values.kafka.resources.requests.memory }}
    {{- with index .Values.kafka.resources.requests "ephemeral-storage" }}
      ephemeral-storage: {{ . }}
    {{- end }}
    limits:
      cpu: {{ default "400m" .Values.kafka.resources.limits.cpu }}
      memory: {{ default "700Mi" .Values.kafka.resources.limits.memory }}
    {{- with index .Values.kafka.resources.limits "ephemeral-storage" }}
      ephemeral-storage: {{ . }}
    {{- end }}
  secretName: {{ template "kafka.name" . }}-secret
  securityContext:
    {{- include "kafka-service.globalPodSecurityContext" . | nindent 4 }}
    {{- with .Values.kafka.securityContext }}
    {{- toYaml . | nindent 4 -}}
    {{- end }}
    {{- if and (ne (.Values.INFRA_KAFKA_FS_GROUP | toString) "<nil>") .Values.global.cloudIntegrationEnabled }}
    fsGroup: {{ .Values.INFRA_KAFKA_FS_GROUP }}
    {{- end }}
  storage:
    size: {{ default "2Gi" .Values.kafka.storage.size }}
{{- if (include "kafka.storageClassName" .) }}
    className:
  {{- range (include "kafka.storageClassName" . | fromYamlArray) }}
      - {{ . }}
  {{- end }}
{{- end }}
{{- if .Values.kafka.storage.volumes }}
    volumes:
  {{- range .Values.kafka.storage.volumes }}
      - {{ . }}
  {{- end }}
{{- end }}
{{- if .Values.kafka.storage.nodes }}
    nodes:
  {{- range .Values.kafka.storage.nodes }}
      - {{ . }}
  {{- end }}
{{- end }}
{{- if .Values.kafka.storage.labels }}
    labels:
  {{- range .Values.kafka.storage.labels }}
      - {{ . }}
  {{- end }}
{{- end }}
{{- if .Values.kafka.getRacksFromNodeLabels }}
  getRacksFromNodeLabels: {{ .Values.kafka.getRacksFromNodeLabels }}
  {{- if .Values.kafka.nodeLabelNameForRack }}
  nodeLabelNameForRack: {{ .Values.kafka.nodeLabelNameForRack }}
  {{- end }}
{{- end }}
{{- if .Values.kafka.racks }}
  racks:
  {{- range .Values.kafka.racks }}
    - {{ . }}
  {{- end }}
{{- end }}
  tokenRolesPath: {{ default  "resource_access.account.roles" .Values.kafka.tokenRolesPath | quote }}
  terminationGracePeriod: {{ .Values.kafka.terminationGracePeriod }}
  rollbackTimeout: {{ .Values.kafka.rollbackTimeout }}
  healthCheckTimeout: {{ .Values.kafka.healthCheckTimeout | default 30 }}
  enableAuditLogs: {{ .Values.kafka.enableAuditLogs }}
  enableAuthorization: {{ .Values.kafka.enableAuthorization }}
  zookeeperConnect: "{{ include "kafka.zooKeeperConnect" . }}"
  zookeeperEnableSsl: {{ .Values.kafka.zookeeperEnableSsl }}
  zookeeperSslSecretName: {{ .Values.kafka.zookeeperSslSecretName | quote }}
  zookeeperSetACL: {{ .Values.kafka.zookeeperSetACL }}
{{- if .Values.kafka.externalHostNames }}
  externalHostNames:
  {{- range .Values.kafka.externalHostNames }}
    - {{ . }}
  {{- end }}
{{- end }}
{{- if .Values.kafka.externalPorts }}
  externalPorts:
  {{- range .Values.kafka.externalPorts }}
    - {{ . }}
  {{- end }}
{{- end }}
{{- if .Values.kafka.environmentVariables }}
  environmentVariables:
  {{- range .Values.kafka.environmentVariables }}
    - {{ . }}
  {{- end }}
{{- end }}
{{- if .Values.kafka.oauth }}
  oauth:
    clockSkew: {{ .Values.kafka.oauth.clockSkew }}
    jwkSourceType: {{ .Values.kafka.oauth.jwkSourceType }}
    jwksConnectionTimeout: {{ .Values.kafka.oauth.jwksConnectionTimeout }}
    jwksReadTimeout: {{ .Values.kafka.oauth.jwksReadTimeout }}
    jwksSizeLimit: {{ .Values.kafka.oauth.jwksSizeLimit }}
{{- end }}
{{- if and .Values.kafka.tls.enabled .Values.global.tls.enabled }}
  ssl:
    enabled: {{ template "kafka-service.enableTls" . }}
    secretName: "{{ template "kafka-service.tlsSecretName" . }}"
  {{- if or .Values.kafka.tls.cipherSuites .Values.global.tls.cipherSuites }}
    cipherSuites:
    {{- range (coalesce .Values.global.kafka.tls.cipherSuites .Values.global.tls.cipherSuites) }}
      - {{ . }}
    {{- end }}
  {{- end }}
    enableTwoWaySsl: {{ .Values.kafka.tls.enableTwoWaySsl }}
    allowNonencryptedAccess: {{ .Values.global.tls.allowNonencryptedAccess }}
{{- end }}
  rollingUpdate: {{ .Values.kafka.rollingUpdate | default false }}
{{- if or .Values.global.customLabels .Values.kafka.customLabels }}
  customLabels:
    {{- .Values.global.customLabels | toYaml | nindent 6 -}}
    {{- .Values.kafka.customLabels | toYaml | nindent 6 -}}
{{- end }}
  defaultLabels:
    {{- include "kafka.defaultLabels" . | nindent 4 }}
    app.kubernetes.io/managed-by: operator
    app.kubernetes.io/managed-by-operator: {{ template "kafka.name" . }}-operator
    app.kubernetes.io/technology: java-others
  debugContainer: {{ .Values.kafka.debugContainer }}
  ccMetricReporterEnabled: {{ .Values.kafka.ccMetricReporterEnabled }}
  kraft:
    enabled: {{ .Values.kafka.kraft.enabled }}
    {{- if .Values.kafka.kraft.enabled }}
    {{- $pvc := lookup "v1" "PersistentVolumeClaim" .Release.Namespace (printf "pvc-%s-1" (include "kafka.name" .)) }}
    {{- if $pvc }}
    {{- if and (not (hasKey $pvc.metadata.labels "kraft")) (not .Values.kafka.kraft.migration) }}
    {{ fail "\nError: You cannot upgrade Kafka with ZooKeeper to Kraft without migration, all data will be lost.\nFind more information in corresponding release documentation." }}
    {{- else }}
    migration: {{ .Values.kafka.kraft.migration }}
    migrationTimeout: {{ .Values.kafka.kraft.migrationTimeout }}
    {{- end }}
    {{- else }}
    migration: false
    {{- end }}
    {{- else }}
    migration: false
    {{- end }}
  {{- if .Values.kafka.migrationController }}
  migrationController:
  {{- if .Values.kafka.migrationController.affinity }}
    affinity:
      {{ .Values.kafka.migrationController.affinity | toJson }}
  {{- end }}
  {{- if .Values.kafka.migrationController.tolerations }}
    tolerations:
      {{ .Values.kafka.migrationController.tolerations | toJson }}
    {{- end }}
  {{- if .Values.kafka.migrationController.priorityClassName }}
    priorityClassName: {{ .Values.kafka.priorityClassName }}
  {{- end }}
    heapSize: {{ .Values.kafka.migrationController.heapSize }}
    resources:
      requests:
        cpu: {{ default "50m" .Values.kafka.migrationController.resources.requests.cpu }}
        memory: {{ default "600Mi" .Values.kafka.migrationController.resources.requests.memory }}
      {{- with index .Values.kafka.migrationController.resources.requests "ephemeral-storage" }}
        ephemeral-storage: {{ . }}
      {{- end }}
      limits:
        cpu: {{ default "400m" .Values.kafka.migrationController.resources.limits.cpu }}
        memory: {{ default "700Mi" .Values.kafka.migrationController.resources.limits.memory }}
      {{- with index .Values.kafka.migrationController.resources.limits "ephemeral-storage" }}
        ephemeral-storage: {{ . }}
      {{- end }}
    storage:
      size: {{ default "2Gi" .Values.kafka.migrationController.storage.size }}
    {{- if (include "kafka.migrationController.storageClassName" .) }}
      className:
    {{- range (include "kafka.migrationController.storageClassName" . | fromYamlArray) }}
        - {{ . }}
    {{- end }}
    {{- end }}
    {{- if .Values.kafka.migrationController.storage.volumes }}
      volumes:
      {{- range .Values.kafka.migrationController.storage.volumes }}
        - {{ . }}
      {{- end }}
    {{- end }}
    {{- if .Values.kafka.migrationController.storage.nodes }}
      nodes:
      {{- range .Values.kafka.migrationController.storage.nodes }}
        - {{ . }}
      {{- end }}
    {{- end }}
    {{- if .Values.kafka.migrationController.storage.labels }}
      labels:
      {{- range .Values.kafka.migrationController.storage.labels }}
        - {{ . }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}