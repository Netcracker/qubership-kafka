{{- if and .Values.kafka.install (not .Values.global.externalKafka.enabled) }}
{{- $secretName := include "kafka-service.tlsSecretName" . }}
{{- $install := and .Values.global.tls.enabled .Values.kafka.tls.enabled ( or .Values.global.tls.generateCerts.enabled (eq (include "kafka.certificatesSpecified" .) "true")) }}
{{- if and $install (eq (include "services.certProvider" .) "helm") (not (lookup "v1" "Secret" .Release.Namespace $secretName)) }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    {{- include "kafka.defaultLabels" . | nindent 4 }}
data:
{{- if not .Values.global.tls.generateCerts.enabled }}
  {{- if .Values.kafka.tls.certificates.crt }}
  tls.crt: {{ .Values.kafka.tls.certificates.crt | quote }}
  {{ end }}
  {{- if .Values.kafka.tls.certificates.key }}
  tls.key: {{ .Values.kafka.tls.certificates.key | quote }}
  {{ end }}
  {{- if .Values.kafka.tls.certificates.ca }}
  ca.crt: {{ .Values.kafka.tls.certificates.ca | quote }}
  {{ end }}
{{- else }}
{{ ( include "kafka.generateCerts" . ) | indent 2 }}
{{ end }}
{{- end }}
{{- end }}