apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kafka.name" . }}-service-operator
  labels:
    {{- include "kafka-services.defaultLabels" . | nindent 4 }}
    app.kubernetes.io/name: {{ template "kafka.name" . }}-service-operator
    name: {{ template "kafka.name" . }}-service-operator
    app.kubernetes.io/instance: {{ cat (printf "%s-service-operator"  (include "kafka.name" .)) .Values.DELIMITER .Release.Namespace | nospace | trunc 63 }}
    app.kubernetes.io/technology: go
spec:
  replicas: {{ default 1 .Values.operator.replicas }}
  selector:
    matchLabels:
      name: {{ template "kafka.name" . }}-service-operator
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
      {{- with .Values.global.customLabels }}
        {{- toYaml . | nindent 8 -}}
      {{- end }}
      {{- with .Values.operator.customLabels }}
        {{- toYaml . | nindent 8 -}}
      {{- end }}
        name: {{ template "kafka.name" . }}-service-operator
        app.kubernetes.io/name: {{ template "kafka.name" . }}-service-operator
    spec:
      serviceAccountName: {{ template "kafka.serviceAccount" . }}
      {{- if and .Values.global.tls.enabled (or .Values.global.disasterRecovery.tls.enabled .Values.backupDaemon.tls.enabled) }}
      volumes:
      {{- if and (eq (include "disasterRecovery.enableTls" .) "true") (eq (include "kafka-service.enableDisasterRecovery" .) "true") }}
      - name: drd-ssl-certs
        secret:
          secretName: {{ template "disasterRecovery.tlsSecretName" . }}
      {{- end }}
      {{- if and .Values.global.tls.enabled .Values.backupDaemon.install .Values.backupDaemon.tls.enabled }}
      - name: backup-daemon-ssl-certs
        secret:
          secretName: {{ template "backupDaemon.tlsSecretName" . }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ template "kafka.name" . }}-service-operator
          securityContext:
            {{- include "kafka-service.globalContainerSecurityContext" . | nindent 12 }}
          image: {{ template "operator.image" . }}
          command:
            - /manager
          imagePullPolicy: Always
          {{- if and .Values.global.tls.enabled .Values.backupDaemon.install .Values.backupDaemon.tls.enabled }}
          volumeMounts:
            - name: backup-daemon-ssl-certs
              mountPath: /backupTLS
          {{- end }}
          env:
            - name: WATCH_NAMESPACE
              {{- if (and (.Values.operator.kmmConfiguratorEnabled) .Values.mirrorMaker.install) }}
              value: {{ .Values.operator.watchNamespace | default "" }}
              {{- else }}
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
              {{- end }}
            {{- if .Values.operator.akhqConfigurator.enabled }}
            - name: WATCH_AKHQ_COLLECT_NAMESPACE
              value: {{ .Values.operator.akhqConfigurator.watchNamespace }}
            {{- end }}
            - name: KMM_ENABLED
              value: {{ .Values.operator.kmmConfiguratorEnabled | quote }}
            {{- if .Values.operator.kafkaUserConfigurator.enabled }}
            - name: WATCH_KAFKA_USERS_COLLECT_NAMESPACE
              value: {{ .Values.operator.kafkaUserConfigurator.watchNamespace }}
            - name: KAFKA_USER_SECRET_CREATING_ENABLED
              value: {{ .Values.operator.kafkaUserConfigurator.secretCreatingEnabled | quote }}
            - name: KAFKA_USER_CONFIGURATOR_RECONCILE_PERIOD_SECONDS
              value: "100"
            - name: BOOTSTRAP_SERVERS
              value: {{ include "kafka-service.kafkaUserBootstrapServers" . }}
            - name: KAFKA_SECRET
              value: {{ include "kafka.name" . }}-services-secret
            - name: KAFKA_SASL_MECHANISM
              value: {{ include "kafka-service.saslMechanism" .}}
            - name: KAFKA_SSL_ENABLED
              value: {{ include "kafka-service.enableTls" . | quote }}
            - name: KAFKA_SSL_SECRET
              value: {{ include "kafka-service.tlsSecretName" . }}
            {{- end }}
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: {{ template "kafka.name" . }}-service-operator
            - name: KMM_CONFIG_RECONCILE_PERIOD_SECONDS
              value: "100"
            - name: OPERATOR_MODE
              value: "kafkaservice"
            - name: CLUSTER_NAME
              value: {{ template "kafka.name" . }}
            - name: API_GROUP
              value: {{ .Values.operator.apiGroup }}
            {{- if .Values.operator.secondaryApiGroup }}
            - name: SECONDARY_API_GROUP
              value: {{ .Values.operator.secondaryApiGroup }}
            {{- end }}
          resources:
            requests:
              memory: {{ default "128Mi" .Values.operator.resources.requests.memory }}
              cpu: {{ default "25m" .Values.operator.resources.requests.cpu }}
            limits:
              memory: {{ default "128Mi" .Values.operator.resources.limits.memory }}
              cpu: {{ default "100m" .Values.operator.resources.limits.cpu }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 40
            timeoutSeconds: 15
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 5
        {{- if (eq (include "kafka-service.enableDisasterRecovery" .) "true") }}
        - name: {{ template "kafka.name" . }}-disaster-recovery
          image: {{ template "disasterRecovery.image" . }}
          imagePullPolicy: Always
          {{- if eq (include "disasterRecovery.enableTls" .) "true" }}
          volumeMounts:
            - name: drd-ssl-certs
              mountPath: /tls
          {{- end }}
          ports:
            - containerPort: {{ template "disasterRecovery.port" . }}
              protocol: TCP
              name: dr
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if eq (include "disasterRecovery.enableTls" .) "true" }}
            - name: TLS_ENABLED
              value: "true"
            - name: CERTS_PATH
              value: "/tls/"
            - name: CIPHER_SUITES
              value: "{{ (include "disasterRecovery.cipherSuites" .) | trimSuffix "," }}"
            {{- end }}
            - name: RESOURCE_FOR_DR
              value: "{{ .Values.operator.apiGroup }} v7 kafkaservices {{ template "kafka.name" . }}"
            - name: USE_DEFAULT_PATHS
              value: "true"
            - name: HEALTH_MAIN_SERVICES_ACTIVE
              value: "{{ trim (include "kafka-service.deploymentNames" .) }}"
            {{- if .Values.global.disasterRecovery.topicsBackup.enabled }}
            - name: HEALTH_ADDITIONAL_SERVICES_ACTIVE
              value: "deployment {{ template "kafka.name" . }}-backup-daemon"
            {{- end }}
            - name: HEALTH_MAIN_SERVICES_STANDBY
              value: "{{ trim (include "kafka-service.deploymentNames" .) }}"
            {{- if .Values.global.disasterRecovery.mirrorMakerReplication.enabled }}
            - name: HEALTH_ADDITIONAL_SERVICES_STANDBY
              value: "deployment {{ .Values.mirrorMaker.regionName }}-{{ template "kafka.name" . }}-mirror-maker"
            {{- end }}
            - name: HEALTH_MAIN_SERVICES_DISABLED
              value: "{{ trim (include "kafka-service.deploymentNames" .) }}"
            {{- if .Values.global.disasterRecovery.httpAuth.enabled }}
            - name: SITE_MANAGER_NAMESPACE
              value: {{ .Values.global.disasterRecovery.httpAuth.smNamespace | quote }}
            - name: SITE_MANAGER_SERVICE_ACCOUNT_NAME
              value: {{ include "disasterRecovery.siteManagerServiceAccount" . }}
            {{- if .Values.global.disasterRecovery.httpAuth.smSecureAuth }}
            - name: SITE_MANAGER_CUSTOM_AUDIENCE
              value: {{ .Values.global.disasterRecovery.httpAuth.customAudience }}
            {{- end }}
            {{- end }}
          resources:
            limits:
              cpu: {{ default "32m" .Values.global.disasterRecovery.resources.limits.cpu  }}
              memory: {{ default "32Mi" .Values.global.disasterRecovery.resources.limits.memory }}
            requests:
              cpu: {{ default "10m" .Values.global.disasterRecovery.resources.requests.cpu }}
              memory: {{ default "10Mi" .Values.global.disasterRecovery.resources.requests.memory }}
          livenessProbe:
            httpGet:
              path: /health
              scheme: {{ eq (include "disasterRecovery.enableTls" .) "true" | ternary "HTTPS" "HTTP" }}
              port: {{ template "disasterRecovery.port" . }}
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: {{ template "disasterRecovery.port" . }}
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          securityContext:
            {{- include "kafka-service.globalContainerSecurityContext" . | nindent 12 }}            
        {{- end }}
      {{- if .Values.operator.affinity }}
      affinity:
        {{ .Values.operator.affinity | toJson }}
      {{- end }}
      {{- if .Values.operator.tolerations }}
      tolerations:
        {{ .Values.operator.tolerations | toJson }}
      {{- end }}
      {{- if .Values.operator.priorityClassName }}
      priorityClassName: {{ .Values.operator.priorityClassName }}
      {{- end }}
      securityContext:
        {{- include "kafka-service.globalPodSecurityContext" . | nindent 8 }}
        {{- with .Values.operator.securityContext }}
        {{- toYaml . | nindent 8 -}}
        {{- end }}
